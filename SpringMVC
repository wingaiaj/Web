将多个servlet 合并成一个 servlet 所有的doget dopost 方法 提取封装在 一个sevlet 中
所有.do 的请求集中在serlvet中 根据隐藏域中的 operate 的值 switch方法判断调用哪个方法 默认为index值 就是调用index 方法
Object operateObj = req.getParameter("operate");
String operate = "index";
Object operateObj = req.getParameter("operate");
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      优化 swtich 替换
//获取当前实例所有方法
        Method[] declaredMethods = this.getClass().getDeclaredMethods();
        //循环遍历
        for (Method declaredMethod : declaredMethods) {
            declaredMethod.setAccessible(true);

            //调用当前方法
            if (operate.equals(declaredMethod.getName())) {
                try {
                    declaredMethod.invoke(this, req, resp);
                  //找到匹配的方法结束
                    return;
                } catch (IllegalAccessException e) {
                    e.printStackTrace();
                } catch (InvocationTargetException e) {
                    e.printStackTrace();
                }
            }
            //未找到指定方法抛出异常
            new RuntimeException("找到不指定operate");
        }
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------c
applicatonContext.xml 文件配置    通过init 初始化方法 中配置 contorl

<?xml version="1.0" encoding="utf-8"?>
<beans>
    <!-- 这个bean标签的作用是 将来servletpath中涉及的名字对应的是fruit，那么就要FruitController这个类来处理 -->
    <bean id="fruit" class="com.atguigu.fruit.controllers.FruitController"/>
</beans>
<!--
1.概念
HTML : 超文本标记语言
XML : 可扩展的标记语言
HTML是XML的一个子集

2.XML包含三个部分：
1) XML声明 ， 而且声明这一行代码必须在XML文件的第一行
2) DTD 文档类型定义
3) XML正文
 -->
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
